# -*- coding: utf-8 -*-
"""Question1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QLpHtBCpOGrJ7BasUUaD9Vn_p3FTwORR
"""

class Solution(object):
    def findMedianSortedArrays(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: float
        """
        merged = sorted(nums1 + nums2)

        # Find the length of the merged array
        total_length = len(merged)

        # Check if the total length is odd or even to determine the median
        if total_length % 2 == 1:
            # If the length is odd, return the middle element
            return float(merged[total_length // 2])
        else:
            # If the length is even, return the average of the middle two elements
            mid1 = merged[total_length // 2 - 1]
            mid2 = merged[total_length // 2]
            return (mid1 + mid2) / 2.0